{"version":3,"file":"not-create-workspace-view.condition-BW5cy3Q_.js","sources":["../../../Client/src/umbrago-create-workspace-view/not-on-create-workspace-view-condition/not-create-workspace-view.condition.ts"],"sourcesContent":["import type { UmbraGoNotCreateWorkspaceViewConditionConfig } from \"./types.js\";\nimport type { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport type {\n  UmbConditionControllerArguments,\n  UmbExtensionCondition,\n} from \"@umbraco-cms/backoffice/extension-api\";\nimport { UmbConditionBase } from \"@umbraco-cms/backoffice/extension-registry\";\n\nexport class UmbraGoNotCreateWorkspaceViewCondition\n  extends UmbConditionBase<UmbraGoNotCreateWorkspaceViewConditionConfig>\n  implements UmbExtensionCondition\n{\n  constructor(\n    host: UmbControllerHost,\n    args: UmbConditionControllerArguments<UmbraGoNotCreateWorkspaceViewConditionConfig>\n  ) {\n    super(host, args);\n\n    window.addEventListener(\"navigationsuccess\", this.#onChange);\n  }\n\n  #onChange = () => {\n    // Notice, this is not pretty. In near future of Umbraco a Context API for Workspace Views will be available which can be observed to know which view is the active.\n    // check if \"/view/create\" is last in the current url:\n    const currentUrl = window.location.pathname;\n    const isCreateView = currentUrl.endsWith(\"/view/create\");\n    this.permitted = !isCreateView;\n  };\n\n  destroy(): void {\n    super.destroy();\n    window.removeEventListener(\"navigationsuccess\", this.#onChange);\n  }\n}\n\nexport { UmbraGoNotCreateWorkspaceViewCondition as api };\n"],"names":["UmbraGoNotCreateWorkspaceViewCondition","UmbConditionBase","host","args","__privateAdd","_onChange","isCreateView","__privateGet"],"mappings":";;;;;;;AAQO,MAAMA,UACHC,EAEV;AAAA,EACE,YACEC,GACAC,GACA;AACA,UAAMD,GAAMC,CAAI;AAKlB,IAAAC,EAAA,MAAAC,GAAY,MAAM;AAIV,YAAAC,IADa,OAAO,SAAS,SACH,SAAS,cAAc;AACvD,WAAK,YAAY,CAACA;AAAA,IACpB;AATS,WAAA,iBAAiB,qBAAqBC,EAAA,MAAKF,EAAS;AAAA,EAAA;AAAA,EAW7D,UAAgB;AACd,UAAM,QAAQ,GACP,OAAA,oBAAoB,qBAAqBE,EAAA,MAAKF,EAAS;AAAA,EAAA;AAElE;AAZEA,IAAA;"}