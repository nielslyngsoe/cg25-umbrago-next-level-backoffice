{"version":3,"file":"address-property-editor.element-BkIlbfOs.js","sources":["../../../Client/src/umbrago-address-property-editor/address-property-editor.element.ts"],"sourcesContent":["import {\r\n  LitElement,\r\n  css,\r\n  html,\r\n  customElement,\r\n  property,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport {\r\n  ManifestPropertyEditorUi,\r\n  UmbPropertyEditorUiElement,\r\n} from \"@umbraco-cms/backoffice/property-editor\";\r\nimport {\r\n  UUIInputEvent,\r\n  UUISelectElement,\r\n} from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { UmbChangeEvent } from \"@umbraco-cms/backoffice/event\";\r\n\r\ntype PropertyEditorValueType = {\r\n  street?: string;\r\n  houseNumber?: string;\r\n  addressLine2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  postalCode?: string;\r\n  country?: string;\r\n};\r\n\r\n// Notice: get your language from a trusted source, not this hardcoded AI generated one:\r\nconst CountryOptions = [\r\n  { value: \"AD\", name: \"Andorra\" },\r\n  { value: \"AE\", name: \"United Arab Emirates\" },\r\n  { value: \"AL\", name: \"Albania\" },\r\n  { value: \"AM\", name: \"Armenia\" },\r\n  { value: \"AR\", name: \"Argentina\" },\r\n  { value: \"AT\", name: \"Austria\" },\r\n  { value: \"AU\", name: \"Australia\" },\r\n  { value: \"AZ\", name: \"Azerbaijan\" },\r\n  { value: \"BA\", name: \"Bosnia and Herzegovina\" },\r\n  { value: \"BA\", name: \"Bosnia and Herzegovina\" },\r\n  { value: \"BD\", name: \"Bangladesh\" },\r\n  { value: \"BE\", name: \"Belgium\" },\r\n  { value: \"BG\", name: \"Bulgaria\" },\r\n  { value: \"BR\", name: \"Brazil\" },\r\n  { value: \"BT\", name: \"Bhutan\" },\r\n  { value: \"BY\", name: \"Belarus\" },\r\n  { value: \"CA\", name: \"Canada\" },\r\n  { value: \"CH\", name: \"Switzerland\" },\r\n  { value: \"CL\", name: \"Chile\" },\r\n  { value: \"CN\", name: \"China\" },\r\n  { value: \"CO\", name: \"Colombia\" },\r\n  { value: \"CY\", name: \"Cyprus\" },\r\n  { value: \"CZ\", name: \"Czech Republic\" },\r\n  { value: \"DE\", name: \"Germany\" },\r\n  { value: \"DK\", name: \"Denmark\" },\r\n  { value: \"DZ\", name: \"Algeria\" },\r\n  { value: \"EE\", name: \"Estonia\" },\r\n  { value: \"EG\", name: \"Egypt\" },\r\n  { value: \"ES\", name: \"Spain\" },\r\n  { value: \"FI\", name: \"Finland\" },\r\n  { value: \"FR\", name: \"France\" },\r\n  { value: \"GB\", name: \"United Kingdom\" },\r\n  { value: \"GE\", name: \"Georgia\" },\r\n  { value: \"GH\", name: \"Ghana\" },\r\n  { value: \"GR\", name: \"Greece\" },\r\n  { value: \"HR\", name: \"Croatia\" },\r\n  { value: \"HU\", name: \"Hungary\" },\r\n  { value: \"ID\", name: \"Indonesia\" },\r\n  { value: \"IE\", name: \"Ireland\" },\r\n  { value: \"IN\", name: \"India\" },\r\n  { value: \"IQ\", name: \"Iraq\" },\r\n  { value: \"IR\", name: \"Iran\" },\r\n  { value: \"IS\", name: \"Iceland\" },\r\n  { value: \"IT\", name: \"Italy\" },\r\n  { value: \"JP\", name: \"Japan\" },\r\n  { value: \"KE\", name: \"Kenya\" },\r\n  { value: \"KG\", name: \"Kyrgyzstan\" },\r\n  { value: \"KH\", name: \"Cambodia\" },\r\n  { value: \"KR\", name: \"South Korea\" },\r\n  { value: \"KZ\", name: \"Kazakhstan\" },\r\n  { value: \"LA\", name: \"Laos\" },\r\n  { value: \"LI\", name: \"Liechtenstein\" },\r\n  { value: \"LK\", name: \"Sri Lanka\" },\r\n  { value: \"LT\", name: \"Lithuania\" },\r\n  { value: \"LU\", name: \"Luxembourg\" },\r\n  { value: \"LV\", name: \"Latvia\" },\r\n  { value: \"LY\", name: \"Libya\" },\r\n  { value: \"MA\", name: \"Morocco\" },\r\n  { value: \"MC\", name: \"Monaco\" },\r\n  { value: \"MD\", name: \"Moldova\" },\r\n  { value: \"MK\", name: \"North Macedonia\" },\r\n  { value: \"MM\", name: \"Myanmar\" },\r\n  { value: \"MN\", name: \"Mongolia\" },\r\n  { value: \"MT\", name: \"Malta\" },\r\n  { value: \"MV\", name: \"Maldives\" },\r\n  { value: \"MX\", name: \"Mexico\" },\r\n  { value: \"MY\", name: \"Malaysia\" },\r\n  { value: \"NG\", name: \"Nigeria\" },\r\n  { value: \"NL\", name: \"Netherlands\" },\r\n  { value: \"NO\", name: \"Norway\" },\r\n  { value: \"NP\", name: \"Nepal\" },\r\n  { value: \"PE\", name: \"Peru\" },\r\n  { value: \"PH\", name: \"Philippines\" },\r\n  { value: \"PK\", name: \"Pakistan\" },\r\n  { value: \"PL\", name: \"Poland\" },\r\n  { value: \"PT\", name: \"Portugal\" },\r\n  { value: \"RO\", name: \"Romania\" },\r\n  { value: \"RO\", name: \"Romania\" },\r\n  { value: \"RS\", name: \"Serbia\" },\r\n  { value: \"RU\", name: \"Russia\" },\r\n  { value: \"RW\", name: \"Rwanda\" },\r\n  { value: \"SA\", name: \"Saudi Arabia\" },\r\n  { value: \"SD\", name: \"Sudan\" },\r\n  { value: \"SE\", name: \"Sweden\" },\r\n  { value: \"SG\", name: \"Singapore\" },\r\n  { value: \"SI\", name: \"Slovenia\" },\r\n  { value: \"SM\", name: \"San Marino\" },\r\n  { value: \"TH\", name: \"Thailand\" },\r\n  { value: \"TJ\", name: \"Tajikistan\" },\r\n  { value: \"TL\", name: \"Timor-Leste\" },\r\n  { value: \"TM\", name: \"Turkmenistan\" },\r\n  { value: \"TN\", name: \"Tunisia\" },\r\n  { value: \"TR\", name: \"Turkey\" },\r\n  { value: \"TZ\", name: \"Tanzania\" },\r\n  { value: \"UA\", name: \"Ukraine\" },\r\n  { value: \"UG\", name: \"Uganda\" },\r\n  { value: \"US\", name: \"United States\" },\r\n  { value: \"UZ\", name: \"Uzbekistan\" },\r\n  { value: \"VA\", name: \"Vatican City\" },\r\n  { value: \"VA\", name: \"Vatican City\" },\r\n  { value: \"VE\", name: \"Venezuela\" },\r\n  { value: \"VN\", name: \"Vietnam\" },\r\n  { value: \"ZA\", name: \"South Africa\" },\r\n  { value: \"ZM\", name: \"Zambia\" },\r\n  { value: \"ZW\", name: \"Zimbabwe\" },\r\n];\r\n\r\n@customElement(\"umbrago-address-property-editor\")\r\nexport class umbragoAddressPropertyEditorElement\r\n  extends UmbElementMixin(LitElement)\r\n  implements UmbPropertyEditorUiElement\r\n{\r\n  @property({ type: Object, attribute: false })\r\n  manifest?: ManifestPropertyEditorUi;\r\n\r\n  @property({ type: Object, attribute: false })\r\n  value?: PropertyEditorValueType;\r\n\r\n  #onSelectCountry = (event: CustomEvent) => {\r\n    const select = event.target as UUISelectElement;\r\n    const selectedCountry = select.value;\r\n    this.#setValueProperty(\"country\", selectedCountry as string);\r\n  };\r\n\r\n  #setValueProperty(property: keyof PropertyEditorValueType, value: string) {\r\n    const newValue = { ...this.value }; // Create a shallow copy of the value, it is necessary as the given value is frozen.\r\n    newValue[property] = value;\r\n    this.value = newValue;\r\n    this.dispatchEvent(new UmbChangeEvent());\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div>\r\n        <uui-label for=\"street\">Street</uui-label>\r\n        <uui-input\r\n          id=\"street\"\r\n          .value=${this.value?.street ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"street\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n      <div>\r\n        <uui-label for=\"housenumber\">House Number</uui-label>\r\n        <uui-input\r\n          id=\"houseNumber\"\r\n          .value=${this.value?.houseNumber ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"houseNumber\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n      <div class=\"span-across\">\r\n        <uui-label for=\"addressLine2\">Address line 2</uui-label>\r\n        <uui-input\r\n          id=\"addressLine2\"\r\n          .value=${this.value?.addressLine2 ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"addressLine2\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n\r\n      <div>\r\n        <uui-label for=\"city\">City</uui-label>\r\n        <uui-input\r\n          id=\"city\"\r\n          .value=${this.value?.city ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"city\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n      <div>\r\n        <uui-label for=\"state\">State</uui-label>\r\n        <uui-input\r\n          id=\"state\"\r\n          .value=${this.value?.state ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"state\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n\r\n      <div>\r\n        <uui-label for=\"postalCode\">Postal Code</uui-label>\r\n        <uui-input\r\n          id=\"postalCode\"\r\n          .value=${this.value?.postalCode ?? \"\"}\r\n          @input=${(e: UUIInputEvent) =>\r\n            this.#setValueProperty(\"postalCode\", e.target.value as string)}\r\n        ></uui-input>\r\n      </div>\r\n      <div>\r\n        <uui-label for=\"country\">Country</uui-label>\r\n        <uui-select\r\n          label=\"Select country\"\r\n          placeholder=\"Select country...\"\r\n          value=${this.value?.country ?? \"\"}\r\n          .options=${\r\n            // Notice: this fix should not be nesecary, future version of UI Library should handle accepting a value.\r\n            CountryOptions.map((e) => ({\r\n              ...e,\r\n              selected: e.value == this.value?.country,\r\n            }))\r\n          }\r\n          @change=${this.#onSelectCountry}\r\n        ></uui-select>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr; /* Two equal columns */\r\n        grid-template-rows: auto auto;\r\n        gap: 1rem;\r\n      }\r\n\r\n      :host > div {\r\n        grid-column: span 1;\r\n        grid-row: span 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n\r\n      :host > div.span-across {\r\n        grid-column: span 2;\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\nexport default umbragoAddressPropertyEditorElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"umbrago-address-property-editor\": umbragoAddressPropertyEditorElement;\r\n  }\r\n}\r\n"],"names":["_onSelectCountry","_umbragoAddressPropertyEditorElement_instances","setValueProperty_fn","CountryOptions","umbragoAddressPropertyEditorElement","UmbElementMixin","LitElement","__privateAdd","event","selectedCountry","__privateMethod","html","_a","e","_b","_c","_d","_e","_f","_g","__privateGet","property","value","newValue","UmbChangeEvent","css","__decorateClass","customElement","umbragoAddressPropertyEditorElement$1"],"mappings":";;;;;;;;;+TAAAA,GAAAC,GAAAC;AA6BA,MAAMC,IAAiB;AAAA,EACrB,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,uBAAuB;AAAA,EAC5C,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,yBAAyB;AAAA,EAC9C,EAAE,OAAO,MAAM,MAAM,yBAAyB;AAAA,EAC9C,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,cAAc;AAAA,EACnC,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,iBAAiB;AAAA,EACtC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,iBAAiB;AAAA,EACtC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EAC5B,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EAC5B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,cAAc;AAAA,EACnC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EAC5B,EAAE,OAAO,MAAM,MAAM,gBAAgB;AAAA,EACrC,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,kBAAkB;AAAA,EACvC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,cAAc;AAAA,EACnC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EAC5B,EAAE,OAAO,MAAM,MAAM,cAAc;AAAA,EACnC,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,eAAe;AAAA,EACpC,EAAE,OAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,cAAc;AAAA,EACnC,EAAE,OAAO,MAAM,MAAM,eAAe;AAAA,EACpC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,WAAW;AAAA,EAChC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,gBAAgB;AAAA,EACrC,EAAE,OAAO,MAAM,MAAM,aAAa;AAAA,EAClC,EAAE,OAAO,MAAM,MAAM,eAAe;AAAA,EACpC,EAAE,OAAO,MAAM,MAAM,eAAe;AAAA,EACpC,EAAE,OAAO,MAAM,MAAM,YAAY;AAAA,EACjC,EAAE,OAAO,MAAM,MAAM,UAAU;AAAA,EAC/B,EAAE,OAAO,MAAM,MAAM,eAAe;AAAA,EACpC,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EAC9B,EAAE,OAAO,MAAM,MAAM,WAAW;AAClC;AAGO,IAAMC,IAAN,cACGC,EAAgBC,CAAU,EAEpC;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAN,CAAA,GAULM,EAAA,MAAAP,GAAmB,CAACQ,MAAuB;AAEzC,YAAMC,IADSD,EAAM,OACU;AAC1B,MAAAE,EAAA,MAAAT,GAAAC,CAAA,EAAL,WAAuB,WAAWO,CAAA;AAAA,IAAA,CACpC;AAAA,EAAA;AAAA,EASA,SAAS;;AACA,WAAAE;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKQC,IAAA,KAAK,UAAL,gBAAAA,EAAY,WAAU,EAAE;AAAA,mBACxB,CAACC,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,UAAUW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOnDC,IAAA,KAAK,UAAL,gBAAAA,EAAY,gBAAe,EAAE;AAAA,mBAC7B,CAACD,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,eAAeW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOxDE,IAAA,KAAK,UAAL,gBAAAA,EAAY,iBAAgB,EAAE;AAAA,mBAC9B,CAACF,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,gBAAgBW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQzDG,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAQ,EAAE;AAAA,mBACtB,CAACH,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,QAAQW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOjDI,IAAA,KAAK,UAAL,gBAAAA,EAAY,UAAS,EAAE;AAAA,mBACvB,CAACJ,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,SAASW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQlDK,IAAA,KAAK,UAAL,gBAAAA,EAAY,eAAc,EAAE;AAAA,mBAC5B,CAACL,MACRH,EAAK,MAAAT,GAAAC,CAAA,EAAL,WAAuB,cAAcW,EAAE,OAAO,KAAgB,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQxDM,IAAA,KAAK,UAAL,gBAAAA,EAAY,YAAW,EAAE;AAAA;AAAA,IAG/BhB,EAAe,IAAI,CAACU,MAAO;;AAAA;AAAA,QACzB,GAAGA;AAAA,QACH,UAAUA,EAAE,WAASD,IAAA,KAAK,UAAL,gBAAAA,EAAY;AAAA,MAAA;AAAA,KACjC,CACJ;AAAA,oBACUQ,QAAKpB,CAAgB,CAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AA2BzC;AA/GEA,IAAA,oBAAA,QAAA;AAVKC,IAAA,oBAAA,QAAA;AAgBLC,IAAiB,SAACmB,GAAyCC,GAAe;AACxE,QAAMC,IAAW,EAAE,GAAG,KAAK,MAAM;AACjC,EAAAA,EAASF,CAAQ,IAAIC,GACrB,KAAK,QAAQC,GACR,KAAA,cAAc,IAAIC,GAAgB;AACzC;AArBWpB,EAoGJ,SAAS;AAAA,EACdqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBF;AAnHAC,EAAA;AAAA,EADCL,EAAS,EAAE,MAAM,QAAQ,WAAW,GAAO,CAAA;AAAA,GAJjCjB,EAKX,WAAA,YAAA,CAAA;AAGAsB,EAAA;AAAA,EADCL,EAAS,EAAE,MAAM,QAAQ,WAAW,GAAO,CAAA;AAAA,GAPjCjB,EAQX,WAAA,SAAA,CAAA;AARWA,IAANsB,EAAA;AAAA,EADNC,EAAc,iCAAiC;AAAA,GACnCvB,CAAA;AA2Hb,MAAAwB,IAAexB;"}