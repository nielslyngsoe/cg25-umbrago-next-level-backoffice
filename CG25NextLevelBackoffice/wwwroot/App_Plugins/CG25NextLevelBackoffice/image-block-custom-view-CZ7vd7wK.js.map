{"version":3,"file":"image-block-custom-view-CZ7vd7wK.js","sources":["../../../Client/src/blocks/image-block/image-block-custom-view.ts"],"sourcesContent":["import { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport {\n  customElement,\n  LitElement,\n  property,\n  css,\n  html,\n  state,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\nimport type { UmbBlockDataType } from \"@umbraco-cms/backoffice/block\";\nimport type { UmbBlockEditorCustomViewElement } from \"@umbraco-cms/backoffice/block-custom-view\";\nimport { UmbImagingRepository } from \"@umbraco-cms/backoffice/imaging\";\n\n@customElement(\"cg25-image-block-custom-view\")\nexport class Cg25ImageBlockElement\n  extends UmbElementMixin(LitElement)\n  implements UmbBlockEditorCustomViewElement\n{\n  //\n  #imagingRepository = new UmbImagingRepository(this);\n\n  @property({ attribute: false })\n  content?: UmbBlockDataType;\n\n  @property({ attribute: false })\n  settings?: UmbBlockDataType;\n\n  @state()\n  _imageUrl?: string;\n\n  willUpdate(changedProperties: Map<string | number | symbol, unknown>) {\n    super.willUpdate(changedProperties);\n    if (changedProperties.has(\"content\")) {\n      const image = (this.content?.image as Array<any> | undefined)?.[0];\n      const imageUnique = image?.mediaKey as string | undefined;\n      if (imageUnique) {\n        this.#imagingRepository\n          .requestThumbnailUrls([imageUnique], 1000, 1000)\n          .then((response) => {\n            const imageUrl = response.data[0]?.url;\n            if (imageUrl) {\n              this._imageUrl = imageUrl;\n            }\n          });\n      }\n    }\n    if (changedProperties.has(\"settings\")) {\n      this.style.backgroundColor =\n        (this.settings?.backgroundColor as string | undefined) ?? \"#544\";\n      this.style.color =\n        (this.settings?.textColor as string | undefined) ?? \"#fff\";\n    }\n  }\n\n  protected render(): unknown {\n    return html`<link\n        rel=\"stylesheet\"\n        href=\"/App_Plugins/CG25NextLevelBackoffice/grid-stylesheet.css\"\n      />\n      <img class=\"image\" src=${this._imageUrl ?? \"\"} />`;\n  }\n\n  static override styles = [\n    UmbTextStyles,\n    css`\n      :host {\n        position: relative;\n        display: block;\n        height: 100%;\n        box-sizing: border-box;\n        background-size: cover;\n        background-repeat: no-repeat;\n      }\n    `,\n  ];\n}\n\nexport default Cg25ImageBlockElement;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cg25-image-block-custom-view\": Cg25ImageBlockElement;\n  }\n}\n"],"names":["_imagingRepository","Cg25ImageBlockElement","UmbElementMixin","LitElement","__privateAdd","UmbImagingRepository","changedProperties","image","_b","_a","imageUnique","__privateGet","response","imageUrl","_c","_d","html","UmbTextStyles","css","__decorateClass","property","state","customElement","Cg25ImageBlockElement$1"],"mappings":";;;;;;;;;;uQAAAA;AAeO,IAAMC,IAAN,cACGC,EAAgBC,CAAU,EAEpC;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAKgBC,EAAA,MAAAJ,GAAA,IAAIK,EAAqB,IAAI,CAAA;AAAA,EAAA;AAAA,EAWlD,WAAWC,GAA2D;;AAEhE,QADJ,MAAM,WAAWA,CAAiB,GAC9BA,EAAkB,IAAI,SAAS,GAAG;AACpC,YAAMC,KAASC,KAAAC,IAAA,KAAK,YAAL,gBAAAA,EAAc,UAAd,gBAAAD,EAAiD,IAC1DE,IAAcH,KAAA,gBAAAA,EAAO;AAC3B,MAAIG,KACGC,EAAA,MAAAX,CAAA,EACF,qBAAqB,CAACU,CAAW,GAAG,KAAM,GAAI,EAC9C,KAAK,CAACE,MAAa;;AAClB,cAAMC,KAAWJ,IAAAG,EAAS,KAAK,CAAC,MAAf,gBAAAH,EAAkB;AACnC,QAAII,MACF,KAAK,YAAYA;AAAA,MACnB,CACD;AAAA,IACL;AAEE,IAAAP,EAAkB,IAAI,UAAU,MAClC,KAAK,MAAM,oBACRQ,IAAA,KAAK,aAAL,gBAAAA,EAAe,oBAA0C,QAC5D,KAAK,MAAM,UACRC,IAAA,KAAK,aAAL,gBAAAA,EAAe,cAAoC;AAAA,EACxD;AAAA,EAGQ,SAAkB;AACnB,WAAAC;AAAA;AAAA;AAAA;AAAA,+BAIoB,KAAK,aAAa,EAAE;AAAA,EAAA;AAgBnD;AAxDEhB,IAAA,oBAAA,QAAA;AALWC,EAgDK,SAAS;AAAA,EACvBgB;AAAA,EACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUF;AApDAC,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAPnBnB,EAQX,WAAA,WAAA,CAAA;AAGAkB,EAAA;AAAA,EADCC,EAAS,EAAE,WAAW,GAAO,CAAA;AAAA,GAVnBnB,EAWX,WAAA,YAAA,CAAA;AAGAkB,EAAA;AAAA,EADCE,EAAM;AAAA,GAbIpB,EAcX,WAAA,aAAA,CAAA;AAdWA,IAANkB,EAAA;AAAA,EADNG,EAAc,8BAA8B;AAAA,GAChCrB,CAAA;AA+Db,MAAAsB,IAAetB;"}