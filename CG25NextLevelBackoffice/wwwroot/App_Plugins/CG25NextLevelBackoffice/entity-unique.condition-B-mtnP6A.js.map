{"version":3,"file":"entity-unique.condition-B-mtnP6A.js","sources":["../../../Client/src/umbrago-article-create-options/entity-context-condition/entity-unique.condition.ts"],"sourcesContent":["import type { UmbraGoEntityUniqueConditionConfig } from \"./types.js\";\nimport type { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { UMB_ENTITY_CONTEXT } from \"@umbraco-cms/backoffice/entity\";\nimport type {\n  UmbConditionControllerArguments,\n  UmbExtensionCondition,\n} from \"@umbraco-cms/backoffice/extension-api\";\nimport { UmbConditionBase } from \"@umbraco-cms/backoffice/extension-registry\";\n\nexport class UmbraGoEntityUniqueCondition\n  extends UmbConditionBase<UmbraGoEntityUniqueConditionConfig>\n  implements UmbExtensionCondition\n{\n  constructor(\n    host: UmbControllerHost,\n    args: UmbConditionControllerArguments<UmbraGoEntityUniqueConditionConfig>\n  ) {\n    super(host, args);\n\n    this.consumeContext(UMB_ENTITY_CONTEXT, (context) => {\n      this.observe(\n        context?.unique,\n        (unique) => {\n          this.permitted = unique === this.config.match;\n        },\n        \"umbraGoEntityUniqueObserver\"\n      );\n    });\n  }\n}\n\nexport { UmbraGoEntityUniqueCondition as api };\n"],"names":["UmbraGoEntityUniqueCondition","UmbConditionBase","host","args","UMB_ENTITY_CONTEXT","context","unique"],"mappings":";;AASO,MAAMA,UACHC,EAEV;AAAA,EACE,YACEC,GACAC,GACA;AACA,UAAMD,GAAMC,CAAI,GAEX,KAAA,eAAeC,GAAoB,CAACC,MAAY;AAC9C,WAAA;AAAA,QACHA,KAAA,gBAAAA,EAAS;AAAA,QACT,CAACC,MAAW;AACL,eAAA,YAAYA,MAAW,KAAK,OAAO;AAAA,QAC1C;AAAA,QACA;AAAA,MACF;AAAA,IAAA,CACD;AAAA,EAAA;AAEL;"}